@model IEnumerable<Package2Go5.Models.ViewModels.ItemsView>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Items</h2>
<table id="Items">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.delivery_address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.delivery_date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.delivery_price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.route_id)
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.delivery_address)
                </td>
              <td>
                    @Html.DisplayFor(modelItem => item.delivery_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.delivery_price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.currency)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td>
                    @if(item.route_id != 0)
                    {
                        if(item.status_id != 3){
                            @Html.ActionLink("Show Route", "Details/" + item.route_id, "Routes", new { i = item.id }, null )
                        }
                        else{
                            @Html.ActionLink("Show Route", "Details/" + item.route_id, "Routes")                
                        }            
                    }
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated && item.UsersItems.Where(ui=>ui.item_id == item.id).First().user_id == ViewBag.User_id)
                    {
                        @Html.ActionLink("Edit", "Edit", new { id=item.id })
                        @Html.ActionLink("Delete", "Delete", new { id=item.id })
                        @Html.ActionLink("Details", "Details", new { id=item.id })
                    }
                    @*else
                    {
                        <input type="button" name="@item.id" id="Add" value ="Add"/>
                        <input type="button" name="" id="Remove" value ="Remove"/>
                    }*@
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.id)" />
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.title)" />
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.address)" />
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.delivery_address)" />
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.delivery_date)" />
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.size)"/>
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.delivery_price)"/>
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.currency)"/>
            </th>
            <th>
                <input type="text" placeholder="@Html.DisplayNameFor(model => model.note)"/>
            </th>
            <th>
                @Html.DropDownList("status", (SelectList)@ViewBag.status)
            </th>
        </tr>
    </tfoot>
</table>

@section Scripts 
{
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/DataTables")
    <script type="text/javascript">
        $(document).ready(function () {

            var geocoder, map;

            var Lithuania = new google.maps.LatLng(55.00, 25.15);
            var mapOptions = {
                zoom: 8,
                center: Lithuania,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            //filter
            var oTable = $('#Items').dataTable({
                "aaSorting": [[4, "desc"]],
                "sDom": '<"top"l>rt<"bottom"ip>',
                "aoColumns": [null, null, null, null, null, null, null, null, null, null, null, { "bSortable": false }],
                "iDisplayLength": 5,
                "oLanguage": {
                    "sLengthMenu": 'Display <select>' +
                      '<option value="5">5</option>' +
                      '<option value="10">10</option>' +
                      '<option value="20">20</option>' +
                      '<option value="-1">All</option>' +
                      '</select> records'
                }
            });

            $('#status').change(function () {
                oTable.fnFilter($(this).val());
            });

            $("tfoot input").keyup(function () {
                oTable.fnFilter(this.value, $("tfoot input").index(this));
            });

            ////link to item details
            //$("#Items").on("dblclick", "tr", function () {
            //    var iPos = oTable.fnGetPosition(this);
            //    var aData = oTable.fnGetData(iPos);
            //    window.location.href = 'Items/Details/' + aData[0];
            //});

            ////RoutesPartView
            //$('#RoutesList').change(function () {

            //    /* Get the selected value of dropdownlist */
            //    var selectedID = $(this).val();

            //    /* Request the partial view with .get request. */
            //    $.get('/Routes/RouteView/' + selectedID, function (data) {
            //        /* data is the pure html returned from action method, load it to your page */
            //        $('#partialPlaceHolder').html(data);
            //        /* little fade in effect */
            //        $('#partialPlaceHolder').fadeIn('fast');
            //    }).done(function() {
            //        calcRoute();
            //    })
            //});

        });
    </script> 
}
